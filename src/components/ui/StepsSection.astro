---
interface Step {
  title: string;
  description: string;
  number?: string;
}

interface Props {
  steps: Step[];
  title?: string;
  description?: string;
  columns?: "2" | "3" | "4";
  variant?: "numbered" | "icon";
  iconName?: string;
}

const {
  steps,
  title,
  description,
  columns = "4",
  variant = "numbered",
  iconName = "heroicons:check",
} = Astro.props;

const gridCols = {
  "2": "grid-cols-1 md:grid-cols-2",
  "3": "grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
  "4": "grid-cols-1 md:grid-cols-2 lg:grid-cols-4",
};

import { Icon } from "astro-icon/components";
import Card from "./Card.astro";
---

<section class="py-20">
  <div class="container-custom">
    {
      title && (
        <div class="mx-auto mb-16 max-w-3xl text-center">
          <h2 class="mb-6 text-3xl font-bold md:text-4xl">{title}</h2>
          {description && <p class="text-xl text-gray-600">{description}</p>}
        </div>
      )
    }

    <div class={`grid ${gridCols[columns]} gap-6`}>
      {
        steps.map((step, index) => (
          <Card variant="default" class="text-center">
            <div class="mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-tuhura-green">
              {variant === "numbered" ? (
                <span class="text-xl font-bold text-white">
                  {step.number || index + 1}
                </span>
              ) : (
                <Icon name={iconName} class="h-8 w-8 text-white" />
              )}
            </div>
            <h3 class="mb-3 text-xl font-semibold text-tuhura-green">
              {step.title}
            </h3>
            <p class="text-gray-600">{step.description}</p>
          </Card>
        ))
      }
    </div>
  </div>
</section>
