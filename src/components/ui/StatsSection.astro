---
interface Stat {
  title: string;
  value: string;
  description: string;
}

interface Props {
  stats: Stat[];
  title?: string;
  description?: string;
  variant?: "default" | "card" | "inline";
  bgColor?: string;
}

const { stats, title, description } = Astro.props;
---

<section class="mt-10 rounded-2xl bg-tuhura-gray p-8 md:p-12">
  <div class="container-custom">
    {
      title && (
        <div class="mx-auto mb-16 max-w-3xl text-center">
          <h2 class="mb-6 text-3xl font-bold md:text-4xl">{title}</h2>
          {description && <p class="text-xl text-gray-600">{description}</p>}
        </div>
      )
    }

    <div>
      <div
        class={`grid grid-cols-1 md:grid-cols-${stats.length} gap-6 text-center`}
      >
        {
          stats.map((stat) => (
            <div>
              <div class="mb-2 text-4xl font-bold text-tuhura-green md:text-5xl">
                {stat.value}
              </div>
              <p class="text-lg text-gray-600">{stat.description}</p>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<!-- <div class="mt-20 bg-tuhura-gray rounded-2xl p-8 md:p-12">
        <h2 class="text-2xl md:text-3xl font-bold text-center mb-12">Our Impact Together</h2>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
          {impactStats.map((stat) => (
            <div class="text-center">
              <div class="text-4xl md:text-5xl font-bold text-tuhura-green mb-2">{stat.number}</div>
              <div class="text-gray-600 text-lg">{stat.label}</div>
            </div>
          ))}
        </div>
      </div>-->
