---
import { Image } from "astro:assets";
import logoSrc from "@assets/logo.svg";

const navItems = [
	{
		name: "Mahi",
		href: "/mahi",
		dropdown: [
			{ name: "Overview", href: "/mahi" },
			{ name: "Sessions", href: "/mahi/sessions" },
			{ name: "Workshops", href: "/mahi/workshops" },
			{ name: "Events", href: "/mahi/events" },
			{ name: "Professional Development", href: "/mahi/pld" },
		],
	},
	{ name: "About Us", href: "/about-us" },
	{ name: "Contact", href: "/contact" },
	{ name: "Support Us", href: "/support-us" },
	{ name: "Resources", href: "https://wiki.tuhuratech.org.nz", external: true },
	{ name: "Blog", href: "https://blog.tuhuratech.org.nz", external: true },
];
---

<header
  class="sticky top-0 z-[1200] w-full bg-white/80 backdrop-blur-md border-b border-gray-100"
  role="banner"
>
  <div class="container-custom flex items-center justify-between h-20">
    <a
      href="/"
      class="flex items-center transition-transform hover:scale-105 focus:scale-105 focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 rounded"
      aria-label="Tūhura Tech home"
    >
      <Image
        src={logoSrc}
        alt="Tūhura Tech Logo"
        width={48}
        height={48}
        class="transition-all hover:brightness-110 focus:brightness-110"
      />
    </a>

    <!-- Desktop Nav -->
    <nav
      class="hidden md:flex items-center space-x-8"
      role="navigation"
      aria-label="Main navigation"
    >
      {
        navItems.map((item) => (
          item.dropdown ? (
            <div class="relative group">
              <a
                href={item.href}
                class="text-gray-700 hover:text-tuhura-green focus:text-tuhura-green transition-all focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 px-2 py-1 flex items-center"
              >
                {item.name}
                <svg class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </a>
              <!-- Dropdown Menu -->
              <div class="absolute top-full left-0 mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-100 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                <div class="py-2">
                  {item.dropdown.map((subItem) => (
                    <a
                      href={subItem.href}
                      class="block px-4 py-3 text-gray-700 hover:bg-tuhura-green/5 hover:text-tuhura-green transition-colors"
                    >
                      {subItem.name}
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ) : (
            <a
              href={item.href}
              class="text-gray-700 hover:text-tuhura-green focus:text-tuhura-green transition-all focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 px-2 py-1"
              target={item.external ? "_blank" : undefined}
              rel={item.external ? "noopener noreferrer" : undefined}
            >
              {item.name}
              {item.external && (
                <svg class="w-3 h-3 ml-1 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
              )}
            </a>
          )
        ))
      }
    </nav>

    <div class="flex items-center space-x-4">
      <a
        href="/mahi/sessions"
        class="btn btn-secondary hidden md:inline-flex focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2"
      >
        Join Sessions
      </a>
      <button
        id="donate-trigger"
        class="btn btn-primary focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2"
        aria-haspopup="dialog"
        aria-expanded="false"
        onclick="(function(btn){ if(typeof window.toggleDonatePopover==='function'){ window.toggleDonatePopover(); const dlg=document.getElementById('donate-popover'); if(dlg && dlg instanceof HTMLDialogElement){ btn.setAttribute('aria-expanded', dlg.open ? 'true' : 'false'); } } })(this)"
      >Donate</button>
      <!-- Mobile Menu Button -->
      <button
        id="menu-toggle"
        class="md:hidden flex items-center transition-transform focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 p-1"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <nav
    id="mobile-menu"
    class="hidden md:hidden bg-white w-full border-t border-gray-100"
    role="navigation"
    aria-label="Mobile navigation"
  >
    <div class="container-custom py-4 space-y-2">
      {
        navItems.map((item, index) => (
          item.dropdown ? (
            <div>
              <a
                href={item.href}
                class="block py-3 px-2 text-gray-700 hover:text-tuhura-green focus:text-tuhura-green transition-all focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 rounded font-medium"
                style={`transition-delay: ${index * 50}ms;`}
              >
                {item.name}
              </a>
              <div class="ml-4 space-y-1">
                {item.dropdown.map((subItem) => (
                  <a
                    href={subItem.href}
                    class="block py-2 px-2 text-gray-600 hover:text-tuhura-green focus:text-tuhura-green transition-all focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 rounded text-sm"
                  >
                    {subItem.name}
                  </a>
                ))}
              </div>
            </div>
          ) : (
            <a
              href={item.href}
              class="block py-3 px-2 text-gray-700 hover:text-tuhura-green focus:text-tuhura-green transition-all focus:outline-none focus:ring-2 focus:ring-tuhura-green focus:ring-offset-2 rounded"
              style={`transition-delay: ${index * 50}ms;`}
              target={item.external ? "_blank" : undefined}
              rel={item.external ? "noopener noreferrer" : undefined}
            >
              {item.name}
              {item.external && (
                <svg class="w-3 h-3 ml-1 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
              )}
            </a>
          )
        ))
      }
    </div>
  </nav>
</header>

<script is:inline>
  const toggle = document.getElementById('menu-toggle');
  const menu = document.getElementById('mobile-menu');
  if (toggle && menu) {
    toggle.addEventListener('click', () => {
      const expanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', (!expanded).toString());
      toggle.classList.toggle('menu-open');
      // Animate height/opacity via CSS classes
      if (menu.classList.contains('hidden')) {
        menu.classList.remove('hidden');
        requestAnimationFrame(() => menu.classList.add('mobile-menu-open'));
      } else if (menu.classList.contains('mobile-menu-open')) {
        menu.classList.remove('mobile-menu-open');
        menu.classList.add('mobile-menu-closing');
        setTimeout(() => {
          menu.classList.remove('mobile-menu-closing');
          menu.classList.add('hidden');
        }, 300);
      } else {
        menu.classList.add('mobile-menu-open');
      }
    });
  }
</script>
